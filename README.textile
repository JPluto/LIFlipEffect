h1. LIFlipEffect

h2. Core Animation-based Window Flip

LIFlipEffect is a class which flips from a source to a target window using CoreAnimation. LIEffect, an abstract superclass, provides a transparent window in which animation occurs while the subclass defines the effect itself.

To use LIFlipEffect, define a controller with outlets to a source and destination window. You can define an action method to perform the flip similar to this one:


bc..- (IBAction)flipToPreferences:(id)sender {
	// don't flip if we're already there...
	if (self.prefWindow.isVisible) return;
	
	// ...also, don't bother flipping if the window isn't visible
	if (self.window.isVisible) {
		[[[LIFlipEffect alloc] initFromWindow:self.window toWindow:self.prefWindow] run];
	}
	else {
		[self.prefWindow makeKeyAndOrderFront:self];
	}
}

p. In the code above, we handle a few special cases - we don't flip if we've already flipped to our destination window and we don't flip if our source window isn't visible. 

Otherwise, we initiate the flip by instantiating LIFlipEffect with a from- and to-window, then ask the object to run. LIFlipEffect will release itself once the animation is complete - hence we do not autorelease it.

h3. Frameworks

To use LIFlipEffect in your own projects, make sure to link to the QuartzCore.framework where the CA... classes are defined.

h3. Licensing

This code is licensed under the BSD license. If you use it, please post me a message at mark.onyschuk@lorem.ca - I'd love to hear from you! I'm also available to work on any complex Cocoa tasks - I'm familiar with it all, and have been working in the environment since the days of NeXT Computer and NeXTstep.
