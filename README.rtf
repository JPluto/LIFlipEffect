{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf460
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-CondensedBlack;\f1\fnil\fcharset0 HelveticaNeue-CondensedBold;\f2\fswiss\fcharset0 Helvetica;
\f3\fmodern\fcharset0 Courier;\f4\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red64\green64\blue64;}
\margl1440\margr1440\vieww12140\viewh13540\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\b\fs48 \cf0 LIFlipEffect\

\f1\fs24 Core Animation based Window Flip
\f2\b0 \
\
LIFlipEffect is a class which flips from a source to a target window using CoreAnimation. LIEffect, an abstract superclass, provides a transparent window in which animation occurs while the subclass defines the effect itself.\
\
To use LIFlipEffect, define a controller with outlets to a source and destination window. You can define an action method to perform the flip similar to this one:\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li280\ql\qnatural\pardirnatural

\f3 \cf2 - (IBAction)flipToPreferences:(id)sender \{\
	// don't flip if we're already there...\
	if (self.prefWindow.isVisible) return;\
	\
	// ...also, don't bother flipping if the window isn't visible\
	if (self.window.isVisible) \{\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li280\ql\qnatural\pardirnatural

\f4\b \cf2 		[[[LIFlipEffect alloc] initFromWindow:self.window toWindow:self.prefWindow] run];\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li280\ql\qnatural\pardirnatural

\f3\b0 \cf2 	\}\
	else \{\
		[self.prefWindow makeKeyAndOrderFront:self];\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f2 \cf0 \
In the code above, we handle a few special cases - we don't flip if we've already flipped to our destination window and we don't flip if our source window isn't visible. \
\
Otherwise, we initiate the flip by instantiating LIFlipEffect with a from- and to-window, then ask the object to run. LIFlipEffect will release itself once the animation is complete - hence we do not autorelease it.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\b\fs28 \cf0 Frameworks\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f2\b0\fs24 \cf0 To use LIFlipEffect in your own projects, make sure to link to the QuartzCore.framework where the CA... classes are defined.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\b\fs28 \cf0 Licensing\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f2\b0\fs24 \cf0 This code is licensed under the BSD license. If you use it, please post me a message at mark.onyschuk@lorem.ca - I'd love to hear from you! I'm also available to work on any complex Cocoa tasks - I'm familiar with it all, and have been working in the environment since the days of NeXT Computer and NeXTstep.\
}